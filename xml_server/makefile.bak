#xml_server
CC=gcc
CPP=g++
srcpath=.
includepath=$(srcpath)
LIB_PATH=$(srcpath)/libs/glib-2.0/lib
#glib_include=$(srcpath)/libs/glib-2.0/include/glib-2.0
glib_cflags=-I$(srcpath)/libs/glib-2.0/include/glib-2.0 -I$(srcpath)/libs/glib-2.0/lib/glib-2.0/include
GLIBS=-lglib-2.0 -lgthread-2.0

ifeq ($(DBG_FLAG), DEBUG)
  dbg_option=-g -O0 -D_DEBUG
else
  ifeq ($(DBG_FLAG), TEST)
    dbg_option=-O2 -D_LINUX_TEST
  else
    dbg_option=-O2
  endif
endif
PlatformLdOption=-Wl,-rpath,./,-rpath,$(LIB_PATH)
PlatformLibs=-lc -lm -lrt -lpthread -ldl $(PlatformLdOption)

CFLAGS=-fpic $(dbg_option) -c -I$(includepath) $(glib_cflags) -DHAVE_GETADDRINFO -DHAVE_NETINET_IN_H

ALL_OBJECTS=xml_server.o network.o tsk.o ossema.o unix-daemon.o 

final_objects=xml_server

all : $(final_objects)

.PHONY : all clean rebuild
	
xml_server : $(ALL_OBJECTS)
	$(CC) $(PlatformLibs) -o $@ $(ALL_OBJECTS) -L$(LIB_PATH) $(GLIBS)

clean:
	@rm -rf $(ALL_OBJECTS)
	@rm -rf $(final_objects)	

rebuild : clean all

#inference rules
%.o:%.c
	$(CC) -c $(CFLAGS) $< -o $@
	
%.o:%.cpp
	$(CPP) -c $(CFLAGS) $< -o $@
